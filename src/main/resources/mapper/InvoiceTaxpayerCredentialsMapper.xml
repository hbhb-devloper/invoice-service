<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbhb.cw.invoice.mapper.InvoiceTaxpayerCredentialsMapper">
  <resultMap id="BaseResultMap" type="com.hbhb.cw.invoice.model.InvoiceTaxpayerCredentials">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="channel_num" jdbcType="VARCHAR" property="channelNum" />
    <result column="channel_name" jdbcType="VARCHAR" property="channelName" />
    <result column="taxpayer_credentials" jdbcType="INTEGER" property="taxpayerCredentials" />
    <result column="tax_rate" jdbcType="DECIMAL" property="taxRate" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="seller_name" jdbcType="VARCHAR" property="sellerName" />
    <result column="seller_taxpayer_code" jdbcType="VARCHAR" property="sellerTaxpayerCode" />
    <result column="business_license" jdbcType="VARCHAR" property="businessLicense" />
    <result column="business_taxpayer_code" jdbcType="VARCHAR" property="businessTaxpayerCode" />
    <result column="legal_person" jdbcType="VARCHAR" property="legalPerson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, unit_id, channel_num, channel_name, taxpayer_credentials, tax_rate, update_time,
    seller_name, seller_taxpayer_code, business_license, business_taxpayer_code, legal_person, 
    create_time, create_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice_taxpayer_credentials
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invoice_taxpayer_credentials
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hbhb.cw.invoice.model.InvoiceTaxpayerCredentials">
    insert into invoice_taxpayer_credentials (id, unit_id, channel_num,
      channel_name, taxpayer_credentials, tax_rate,
      update_time, seller_name, seller_taxpayer_code, 
      business_license, business_taxpayer_code, 
      legal_person, create_time, create_by
      )
    values (#{id,jdbcType=BIGINT}, #{unitId,jdbcType=INTEGER}, #{channelNum,jdbcType=VARCHAR},
      #{channelName,jdbcType=VARCHAR}, #{taxpayerCredentials,jdbcType=INTEGER}, #{taxRate,jdbcType=DECIMAL},
      #{updateTime,jdbcType=TIMESTAMP}, #{sellerName,jdbcType=VARCHAR}, #{sellerTaxpayerCode,jdbcType=VARCHAR}, 
      #{businessLicense,jdbcType=VARCHAR}, #{businessTaxpayerCode,jdbcType=VARCHAR}, 
      #{legalPerson,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hbhb.cw.invoice.model.InvoiceTaxpayerCredentials">
    insert into invoice_taxpayer_credentials
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="channelNum != null">
        channel_num,
      </if>
      <if test="channelName != null">
        channel_name,
      </if>
      <if test="taxpayerCredentials != null">
        taxpayer_credentials,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sellerName != null">
        seller_name,
      </if>
      <if test="sellerTaxpayerCode != null">
        seller_taxpayer_code,
      </if>
      <if test="businessLicense != null">
        business_license,
      </if>
      <if test="businessTaxpayerCode != null">
        business_taxpayer_code,
      </if>
      <if test="legalPerson != null">
        legal_person,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="channelNum != null">
        #{channelNum,jdbcType=VARCHAR},
      </if>
      <if test="channelName != null">
        #{channelName,jdbcType=VARCHAR},
      </if>
      <if test="taxpayerCredentials != null">
        #{taxpayerCredentials,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerName != null">
        #{sellerName,jdbcType=VARCHAR},
      </if>
      <if test="sellerTaxpayerCode != null">
        #{sellerTaxpayerCode,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null">
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="businessTaxpayerCode != null">
        #{businessTaxpayerCode,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbhb.cw.invoice.model.InvoiceTaxpayerCredentials">
    update invoice_taxpayer_credentials
    <set>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="channelNum != null">
        channel_num = #{channelNum,jdbcType=VARCHAR},
      </if>
      <if test="channelName != null">
        channel_name = #{channelName,jdbcType=VARCHAR},
      </if>
      <if test="taxpayerCredentials != null">
        taxpayer_credentials = #{taxpayerCredentials,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null">
        tax_rate = #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerName != null">
        seller_name = #{sellerName,jdbcType=VARCHAR},
      </if>
      <if test="sellerTaxpayerCode != null">
        seller_taxpayer_code = #{sellerTaxpayerCode,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null">
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="businessTaxpayerCode != null">
        business_taxpayer_code = #{businessTaxpayerCode,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        legal_person = #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbhb.cw.invoice.model.InvoiceTaxpayerCredentials">
    update invoice_taxpayer_credentials
    set unit_id = #{unitId,jdbcType=INTEGER},
      channel_num = #{channelNum,jdbcType=VARCHAR},
      channel_name = #{channelName,jdbcType=VARCHAR},
      taxpayer_credentials = #{taxpayerCredentials,jdbcType=INTEGER},
      tax_rate = #{taxRate,jdbcType=DECIMAL},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      seller_name = #{sellerName,jdbcType=VARCHAR},
      seller_taxpayer_code = #{sellerTaxpayerCode,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      business_taxpayer_code = #{businessTaxpayerCode,jdbcType=VARCHAR},
      legal_person = #{legalPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByCond" parameterType="map" resultType="com.hbhb.cw.invoice.web.vo.InvoiceTaxpayerResVO">
    select
    u.unit_name      as unitId,
    itc.channel_num  as channelNum,
    itc.channel_name as channelName,
    itc.taxpayer_credentials as taxpayerCredentials,
    itc.tax_rate     as taxRate,
    itc.update_time  as updateTime,
    itc.seller_name  as sellerName,
    itc.seller_taxpayer_code as sellerTaxpayerCode,
    itc.business_license as businessLicense,
    itc.business_taxpayer_code as businessTaxpayerCode,
    itc.legal_person as legalPerson
    from invoice_taxpayer_credentials itc
    left join unit u on u.id = itc.unit_id
    <where>
      <if test="cond.channelNum != null">
        and itc.channel_num = #{cond.channelNum}
      </if>
      <if test="cond.sellerName != null">
        and itc.seller_name like concat ('%', #{cond.sellerName}, '%')
      </if>
      <if test="cond.sellerTaxpayerCode != null">
        and itc.seller_taxpayer_code like concat ('%', #{cond.sellerTaxpayerCode}, '%')
      </if>
      <if test="cond.businessLicense != null">
        and itc.business_license like concat ('%', #{cond.businessLicense}, '%')
      </if>
      <if test="cond.businessTaxpayerCode != null">
        and itc.business_taxpayer_code like concat ('%', #{cond.businessTaxpayerCode}, '%')
      </if>
      <if test="cond.taxpayerCredentials != null">
        and itc.taxpayer_credentials like concat ('%', #{cond.taxpayerCredentials}, '%')
      </if>
    </where>
  </select>

  <select id="countByCond" parameterType="map" resultType="int">
    select COUNT(1)
    from invoice_taxpayer_credentials
    <where>
      <if test="cond.channelNum != null">
        and channel_num = #{cond.channelNum}
      </if>
      <if test="cond.sellerName != null">
        and seller_name like concat ('%', #{cond.sellerName}, '%')
      </if>
      <if test="cond.sellerTaxpayerCode != null">
        and seller_taxpayer_code like concat ('%', #{cond.sellerTaxpayerCode}, '%')
      </if>
      <if test="cond.businessLicense != null">
        and business_license like concat ('%', #{cond.businessLicense}, '%')
      </if>
      <if test="cond.businessTaxpayerCode != null">
        and business_taxpayer_code like concat ('%', #{cond.businessTaxpayerCode}, '%')
      </if>
      <if test="cond.taxpayerCredentials != null">
        and taxpayer_credentials like concat ('%', #{cond.taxpayerCredentials}, '%')
      </if>
    </where>
  </select>

  <insert id="insertBatch" parameterType="list">
    insert into invoice_taxpayer_credentials (
    unit_id,
    channel_num,
    channel_name,
    taxpayer_credentials,
    tax_rate,
    seller_name,
    seller_taxpayer_code,
    business_license,
    business_taxpayer_code,
    legal_person) values
    <foreach item="item" index="index" collection="list" separator=",">
      (#{item.unitId},
      #{item.channelNum},
      #{item.channelName},
      #{item.taxpayerCredentials},
      #{item.taxRate},
      #{item.sellerName},
      #{item.sellerTaxpayerCode},
      #{item.businessLicense},
      #{item.businessTaxpayerCode},
      #{item.legalPerson})
    </foreach>
  </insert>

  <select id="selectByChannel" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from invoice_taxpayer_credentials
    <where>
      <if test="channelNum != null">
        and channel_num = #{channelNum}
      </if>
      <if test="unitId != null">
        and unit_id = #{unitId}
      </if>
    </where>
  </select>

  <delete id="deleteByUnitId" parameterType="int">
    delete from invoice_taxpayer_credentials
    <where>
      <if test="unitId != null">
        and unit_id = #{unitId}
      </if>
    </where>
  </delete>
</mapper>