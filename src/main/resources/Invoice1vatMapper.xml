<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbhb.cw.invoice.mapper.Invoice1vatMapper">
  <resultMap id="BaseResultMap" type="com.hbhb.cw.invoice.model.Invoice1vat">
    <id column="vat1_id" jdbcType="BIGINT" property="vat1Id"/>
    <result column="invoice_type" jdbcType="VARCHAR" property="invoiceType"/>
    <result column="invoice_code" jdbcType="VARCHAR" property="invoiceCode"/>
    <result column="invoice_number" jdbcType="VARCHAR" property="invoiceNumber"/>
    <result column="invoice_page_number" jdbcType="INTEGER" property="invoicePageNumber"/>
    <result column="invoice_date" jdbcType="DATE" property="invoiceDate"/>
    <result column="tax_free_amount" jdbcType="DECIMAL" property="taxFreeAmount"/>
    <result column="table_number" jdbcType="VARCHAR" property="tableNumber"/>
    <result column="project_properties" jdbcType="VARCHAR" property="projectProperties"/>
    <result column="buyer_tax_id" jdbcType="VARCHAR" property="buyerTaxId"/>
    <result column="unit_id" jdbcType="INTEGER" property="unitId"/>
    <result column="i_time" jdbcType="TIMESTAMP" property="iTime"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
  </resultMap>
  <sql id="Base_Column_List">
    vat1_id, invoice_type, invoice_code, invoice_number, invoice_page_number, invoice_date, 
    tax_free_amount, table_number, project_properties, buyer_tax_id, unit_id, i_time, 
    user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from invoice_1vat
    where vat1_id = #{vat1Id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invoice_1vat
    where vat1_id = #{vat1Id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hbhb.cw.invoice.model.Invoice1vat">
    insert into invoice_1vat (vat1_id, invoice_type, invoice_code, 
      invoice_number, invoice_page_number, invoice_date, 
      tax_free_amount, table_number, project_properties, 
      buyer_tax_id, unit_id, i_time, 
      user_id)
    values (#{vat1Id,jdbcType=BIGINT}, #{invoiceType,jdbcType=VARCHAR}, #{invoiceCode,jdbcType=VARCHAR}, 
      #{invoiceNumber,jdbcType=VARCHAR}, #{invoicePageNumber,jdbcType=INTEGER}, #{invoiceDate,jdbcType=DATE}, 
      #{taxFreeAmount,jdbcType=DECIMAL}, #{tableNumber,jdbcType=VARCHAR}, #{projectProperties,jdbcType=VARCHAR}, 
      #{buyerTaxId,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}, #{iTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hbhb.cw.invoice.model.Invoice1vat">
    insert into invoice_1vat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vat1Id != null">
        vat1_id,
      </if>
      <if test="invoiceType != null">
        invoice_type,
      </if>
      <if test="invoiceCode != null">
        invoice_code,
      </if>
      <if test="invoiceNumber != null">
        invoice_number,
      </if>
      <if test="invoicePageNumber != null">
        invoice_page_number,
      </if>
      <if test="invoiceDate != null">
        invoice_date,
      </if>
      <if test="taxFreeAmount != null">
        tax_free_amount,
      </if>
      <if test="tableNumber != null">
        table_number,
      </if>
      <if test="projectProperties != null">
        project_properties,
      </if>
      <if test="buyerTaxId != null">
        buyer_tax_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="iTime != null">
        i_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vat1Id != null">
        #{vat1Id,jdbcType=BIGINT},
      </if>
      <if test="invoiceType != null">
        #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCode != null">
        #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNumber != null">
        #{invoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="invoicePageNumber != null">
        #{invoicePageNumber,jdbcType=INTEGER},
      </if>
      <if test="invoiceDate != null">
        #{invoiceDate,jdbcType=DATE},
      </if>
      <if test="taxFreeAmount != null">
        #{taxFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tableNumber != null">
        #{tableNumber,jdbcType=VARCHAR},
      </if>
      <if test="projectProperties != null">
        #{projectProperties,jdbcType=VARCHAR},
      </if>
      <if test="buyerTaxId != null">
        #{buyerTaxId,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="iTime != null">
        #{iTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbhb.cw.invoice.model.Invoice1vat">
    update invoice_1vat
    <set>
      <if test="invoiceType != null">
        invoice_type = #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCode != null">
        invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNumber != null">
        invoice_number = #{invoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="invoicePageNumber != null">
        invoice_page_number = #{invoicePageNumber,jdbcType=INTEGER},
      </if>
      <if test="invoiceDate != null">
        invoice_date = #{invoiceDate,jdbcType=DATE},
      </if>
      <if test="taxFreeAmount != null">
        tax_free_amount = #{taxFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tableNumber != null">
        table_number = #{tableNumber,jdbcType=VARCHAR},
      </if>
      <if test="projectProperties != null">
        project_properties = #{projectProperties,jdbcType=VARCHAR},
      </if>
      <if test="buyerTaxId != null">
        buyer_tax_id = #{buyerTaxId,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="iTime != null">
        i_time = #{iTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where vat1_id = #{vat1Id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbhb.cw.invoice.model.Invoice1vat">
    update invoice_1vat
    set invoice_type = #{invoiceType,jdbcType=VARCHAR},
      invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      invoice_number = #{invoiceNumber,jdbcType=VARCHAR},
      invoice_page_number = #{invoicePageNumber,jdbcType=INTEGER},
      invoice_date = #{invoiceDate,jdbcType=DATE},
      tax_free_amount = #{taxFreeAmount,jdbcType=DECIMAL},
      table_number = #{tableNumber,jdbcType=VARCHAR},
      project_properties = #{projectProperties,jdbcType=VARCHAR},
      buyer_tax_id = #{buyerTaxId,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=INTEGER},
      i_time = #{iTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where vat1_id = #{vat1Id,jdbcType=BIGINT}
  </update>

  <select id="selectListByCond" parameterType="map" resultType="com.hbhb.cw.invoice.web.vo.Invoice1ResVO">
    select
    i.vat1_id as vat1Id,
    i.invoice_type as invoiceType,
    i.invoice_code as invoiceCode,
    i.invoice_number as invoiceNumber,
    i.invoice_page_number as invoicePageNumber,
    DATE_FORMAT(i.invoice_date,'%Y-%m-%d') as invoiceDate,
    i.tax_free_amount as taxFreeAmount,
    i.buyer_tax_id as buyerTaxId,
    i.project_properties as projectProperties,
    i.table_number as tableNumber,
    u.unit_name as branch,
    i.i_time as iTime,
    su.user_name as personnel
    from invoice_1vat i
    left join unit u on i.unit_id = u.id
    left join sys_user su on i.user_id = su.id
    <where>
      <if test="invoiceCode != null  and invoiceCode != ''">
        and i.invoice_code = #{invoiceCode}
      </if>
      <if test="invoiceNumber != null  and invoiceNumber != ''">
        and i.invoice_number = #{invoiceNumber}
      </if>
      <if test="invoiceDate != null  and invoiceDate != ''">
        and i.invoice_date = #{invoiceDate}
      </if>
      <if test="taxFreeAmount != null  and taxFreeAmount != ''">
        and i.tax_free_amount = #{taxFreeAmount}
      </if>
      <if test="buyerTaxId != null  and buyerTaxId != ''">
        and i.buyer_tax_id = #{buyerTaxId}
      </if>
      <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
        and i.i_time between #{beginTime} and #{endTime}
      </if>
      <if test="userId != null  and userId != ''">
        and i.user_id = #{userId}
      </if>
      <if test="personnel != null  and personnel != ''">
        and su.user_name = #{personnel}
      </if>
      <if test="branch != null  and branch != ''">
        and u.unit_name = #{branch}
      </if>
    </where>
    order by i.i_time ASC
  </select>

  <select id="countByCond" parameterType="map" resultType="int">
    select count(1) from invoice_1vat i
    left join unit u on i.unit_id = u.id
    left join sys_user su on i.user_id = su.id
    <where>
      <if test="invoiceCode != null  and invoiceCode != ''">
        and i.invoice_code = #{invoiceCode}
      </if>
      <if test="invoiceNumber != null  and invoiceNumber != ''">
        and i.invoice_number = #{invoiceNumber}
      </if>
      <if test="invoiceDate != null  and invoiceDate != ''">
        and i.invoice_date = #{invoiceDate}
      </if>
      <if test="taxFreeAmount != null  and taxFreeAmount != ''">
        and i.tax_free_amount = #{taxFreeAmount}
      </if>
      <if test="buyerTaxId != null  and buyerTaxId != ''">
        and i.buyer_tax_id = #{buyerTaxId}
      </if>
      <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
        and i.i_time between #{beginTime} and #{endTime}
      </if>
      <if test="userId != null  and userId != ''">
        and i.user_id = #{userId}
      </if>
      <if test="personnel != null  and personnel != ''">
        and su.user_name = #{personnel}
      </if>
      <if test="branch != null  and branch != ''">
        and u.unit_name = #{branch}
      </if>
    </where>
  </select>

  <select id="selectListByIds" parameterType="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from invoice_1vat
    where vat1_id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectByNumber" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from invoice_1vat
    where invoice_number = #{invoiceNumber} and invoice_code = #{invoiceCode}
  </select>

  <delete id="deleteBatchByIds" parameterType="list">
    delete from invoice_1vat
    where vat1_id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  
  <select id="selectById" parameterType="long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from invoice_1vat
    where vat1_id = #{vat1Id}
  </select>

  <select id="selectVatByCond" parameterType="long" resultType="com.hbhb.cw.invoice.web.vo.InvoiceInspectResVat">
    select i1v.invoice_number as invoiceNumber , i1v.invoice_code as invoiceCode ,i1v.invoice_date as invoiceDate from invoice_1vat i1v
    left join invoice_library il on i1v.invoice_code = il.invoice_code and i1v.invoice_number = il.invoice_number
    <where>
      <if test="invoiceDate != null  and invoiceDate != ''">
        and i1v.invoice_date like concat ('%', #{invoiceDate}, '%')
      </if>
      <if test="unitId != null  and unitId != ''">
        and i1v.unit_id = #{unitId}
      </if>
      <if test="importDate != null  and importDate != ''">
        and i1v.i_time like concat (#{importDate}, '%')
      </if>
      <if test="sellerName != null  and sellerName != ''">
        and il.seller_name like concat ( '%',#{sellerName}, '%')
      </if>
      <if test="sellerTax != null  and sellerTax != ''">
        and il.seller_tax like concat ( '%',#{sellerTax}, '%')
      </if>
    </where>
    union select i3v.invoice_number as invoiceNumber,i3v.invoice_code as invoiceCode ,i3v.invoice_date as invoiceDate from invoice_3vat i3v
    left join invoice_library il on i3v.invoice_code = il.invoice_code and i3v.invoice_number = il.invoice_number
    <where>
      <if test="invoiceDate != null  and invoiceDate != ''">
        and i3v.invoice_date like concat ('%', #{invoiceDate}, '%')
      </if>
      <if test="unitId != null  and unitId != ''">
        and i3v.unit_id = #{unitId}
      </if>
      <if test="importDate != null  and importDate != ''">
        and i3v.i_time like concat ( #{importDate}, '%')
      </if>
      <if test="sellerName != null  and sellerName != ''">
        and il.seller_name like concat ( '%',#{sellerName}, '%')
      </if>
      <if test="sellerTax != null  and sellerTax != ''">
        and il.seller_tax like concat ( '%',#{sellerTax}, '%')
      </if>
    </where>
    union select i6v.invoice_number as invoiceNumber,i6v.invoice_code as invoiceCode ,i6v.invoice_date as invoiceDate from invoice_6vat i6v
    left join invoice_library il on i6v.invoice_code = il.invoice_code and i6v.invoice_number = il.invoice_number
    <where>
      <if test="invoiceDate != null  and invoiceDate != ''">
        and i6v.invoice_date like concat ('%', #{invoiceDate}, '%')
      </if>
      <if test="unitId != null  and unitId != ''">
        and i6v.unit_id = #{unitId}
      </if>
      <if test="importDate != null  and importDate != ''">
        and i6v.i_time like concat ( #{importDate}, '%')
      </if>
      <if test="sellerName != null  and sellerName != ''">
        and il.seller_name like concat ( '%',#{sellerName}, '%')
      </if>
      <if test="sellerTax != null  and sellerTax != ''">
        and il.seller_tax like concat ( '%',#{sellerTax}, '%')
      </if>
    </where>
    union select iv.invoice_number as invoiceNumber,iv.invoice_code as invoiceCode ,iv.invoice_date as invoiceDate from invoice_vat iv
    left join invoice_library il on iv.invoice_code = il.invoice_code and iv.invoice_number = il.invoice_number
    <where>
      <if test="invoiceDate != null  and invoiceDate != ''">
        and iv.invoice_date like concat ('%', #{invoiceDate}, '%')
      </if>
      <if test="unitId != null  and unitId != ''">
        and iv.unit_id = #{unitId}
      </if>
      <if test="importDate != null  and importDate != ''">
        and iv.i_time like concat ( #{importDate}, '%')
      </if>
      <if test="sellerName != null  and sellerName != ''">
        and il.seller_name like concat ( '%',#{sellerName}, '%')
      </if>
      <if test="sellerTax != null  and sellerTax != ''">
        and il.seller_tax like concat ( '%',#{sellerTax}, '%')
      </if>
    </where>
  </select>
</mapper>